<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2000-2012 Octopus Deploy Pty. Ltd.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project name="module_octopus-server" default="compile.module.octopus-server">
  <dirname property="module.octopus-server.basedir" file="${ant.file.module_octopus-server}"/>
  
  <property name="module.jdk.home.octopus-server" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.octopus-server" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.octopus-server" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.octopus-server" value="${compiler.args}"/>
  
  <property name="octopus-server.output.dir" value="${module.octopus-server.basedir}/../out/production/octopus-server"/>
  <property name="octopus-server.testoutput.dir" value="${module.octopus-server.basedir}/../out/test/octopus-server"/>
  
  <path id="octopus-server.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="octopus-server.module.production.classpath">
    <path refid="${module.jdk.classpath.octopus-server}"/>
    <path refid="library.teamcity_open_api_agent.classpath"/>
    <path refid="library.teamcity_open_api_common.classpath"/>
    <path refid="library.teamcity_open_api_server.classpath"/>
    <path refid="library.teamcity_third-party.classpath"/>
    <path refid="library.tomcat.classpath"/>
    <pathelement location="${octopus-common.output.dir}"/>
  </path>
  
  <path id="octopus-server.runtime.production.module.classpath">
    <pathelement location="${octopus-server.output.dir}"/>
    <path refid="library.teamcity_open_api_agent.classpath"/>
    <path refid="library.teamcity_open_api_common.classpath"/>
    <path refid="library.teamcity_open_api_server.classpath"/>
    <path refid="library.teamcity_third-party.classpath"/>
    <path refid="library.tomcat.classpath"/>
    <path refid="octopus-common.runtime.production.module.classpath"/>
  </path>
  
  <path id="octopus-server.module.classpath">
    <path refid="${module.jdk.classpath.octopus-server}"/>
    <pathelement location="${octopus-server.output.dir}"/>
    <path refid="library.teamcity_open_api_agent.classpath"/>
    <path refid="library.teamcity_open_api_common.classpath"/>
    <path refid="library.teamcity_open_api_server.classpath"/>
    <path refid="library.teamcity_third-party.classpath"/>
    <path refid="library.tomcat.classpath"/>
    <pathelement location="${octopus-common.testoutput.dir}"/>
    <pathelement location="${octopus-common.output.dir}"/>
  </path>
  
  <path id="octopus-server.runtime.module.classpath">
    <pathelement location="${octopus-server.testoutput.dir}"/>
    <pathelement location="${octopus-server.output.dir}"/>
    <path refid="library.teamcity_open_api_agent.classpath"/>
    <path refid="library.teamcity_open_api_common.classpath"/>
    <path refid="library.teamcity_open_api_server.classpath"/>
    <path refid="library.teamcity_third-party.classpath"/>
    <path refid="library.tomcat.classpath"/>
    <path refid="octopus-common.runtime.module.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.octopus-server">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.octopus-server">
    <patternset refid="excluded.from.module.octopus-server"/>
  </patternset>
  
  <path id="octopus-server.module.sourcepath">
    <dirset dir="${module.octopus-server.basedir}">
      <include name="src"/>
      <include name="resources"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.octopus-server" depends="compile.module.octopus-server.production,compile.module.octopus-server.tests" description="Compile module octopus-server"/>
  
  <target name="compile.module.octopus-server.production" depends="compile.module.octopus-common" description="Compile module octopus-server; production classes">
    <mkdir dir="${octopus-server.output.dir}"/>
    <javac destdir="${octopus-server.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.octopus-server}/javac">
      <compilerarg line="${compiler.args.octopus-server}"/>
      <bootclasspath refid="octopus-server.module.bootclasspath"/>
      <classpath refid="octopus-server.module.production.classpath"/>
      <src refid="octopus-server.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.octopus-server"/>
    </javac>
    
    <copy todir="${octopus-server.output.dir}">
      <fileset dir="${module.octopus-server.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.octopus-server.basedir}/resources">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.octopus-server.tests" depends="compile.module.octopus-server.production" description="compile module octopus-server; test classes" unless="skip.tests"/>
  
  <target name="clean.module.octopus-server" description="cleanup module">
    <delete dir="${octopus-server.output.dir}"/>
    <delete dir="${octopus-server.testoutput.dir}"/>
  </target>
</project>